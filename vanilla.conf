server {
    # Add deferred to add TCP_DEFER_ACCEPT option
    # http://www.techrepublic.com/article/take-advantage-of-tcpip-options-to-optimize-data-transmission/1050771
    listen 80 deferred;

    server_name vanilla;

    root /home/www/vanilla/;
    
    location / {
        include uwsgi_params;
        uwsgi_pass unix:/tmp/vanilla.sock;
    }
    
    location /static/ {
        expires 30d;
    }
    
    # Force the latest IE version
    # Use ChromeFrame if it's installed for a better experience for the
    # poor IE folk
    add_header "X-UA-Compatible" "IE=Edge,chrome=1";  
    
    # Cross domain webfont access
    location ~* \.(?:ttf|ttc|otf|eot|woff|font.css)$ {
        add_header "Access-Control-Allow-Origin" "*";

        # Also, set cache rules for webfonts.
        #
        # See http://wiki.nginx.org/HttpCoreModule#location
        # And https://github.com/h5bp/server-configs/issues/85
        # And https://github.com/h5bp/server-configs/issues/86
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }
    
    # Prevent clients from accessing hidden files (starting with a dot)
    # This is particularly important if you store .htpasswd files in
    # the site hierarchy
    location ~* (?:^|/)\. {
        deny all;
    }

    # Prevent clients from accessing to backup/config/source files
    location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
        deny all;
    }
    
    # This tells Nginx to cache open file handles, "not found" errors,
    # metadata about files and their permissions, etc.
    #
    # The upside of this is that Nginx can immediately begin sending
    # data when a popular file is requested, and will also know to
    # immediately send a 404 if a file is missing on disk, and so on.
    #
    # However, it also means that the server won't react immediately to
    # changes on disk, which may be undesirable.
    #
    # In the below configuration, inactive files are released from the
    # cache after 20 seconds, whereas active (recently requested) files
    # are re-validated every 30 seconds.
    #
    # Descriptors will not be cached unless they are used at least 2
    # times within 20 seconds (the inactive time).
    #
    # A maximum of the 1000 most recently used file descriptors can be
    # cached at any time.
    #
    # Production servers with stable file collections will definitely
    # want to enable the cache.
    open_file_cache          max=1000 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;
}
